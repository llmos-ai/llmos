name: test
on:
  pull_request:
    branches:
    - main
    - v*

env:
  REGISTRY: ${{ vars.REGISTRY || 'ghcr.io/llmos-ai' }}

jobs:
  validate-cli:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22
        cache: true
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
      with:
        buildkitd-flags: --debug
    - run: make test && make lint
    - name: Install GoReleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: latest
        install-only: true
    - name: Build LLMOS CLI
      run: make build-cli
#    - name: Setup Earthly
#      uses: earthly/actions-setup@v1
#      with:
#        github-token: ${{ secrets.GITHUB_TOKEN }}
#        version: "latest"
#    - name: Build models
#      run: |
#        earthly --ci +build-models --REGISTRY=${{ env.REGISTRY }} --VERSION=${{ env.VERSION }}
#      env:
#        VERSION: ${{ steps.get_ref_name.outputs.ref_name }}
#    - name: build repo
#      run: make build-repo
#      env:
#        VERSION: ${{ steps.get_ref_name.outputs.ref_name }}
#  validate-iso-release:
#    needs: validate-cli
#    runs-on: ubuntu-latest
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v4
#    - name: Set up QEMU
#      uses: docker/setup-qemu-action@v3
#    - name: Set up Docker Buildx
#      id: buildx
#      uses: docker/setup-buildx-action@v3
#      with:
#        buildkitd-flags: --debug
#    - name: Get ref_name
#      id: get_ref_name
#      run: |
#        if [ "${{ github.event_name }}" == "pull_request" ]; then
#          echo "ref_name=${{ github.base_ref }}"
#          echo "ref_name=${{ github.base_ref }}" >> $GITHUB_OUTPUT || exit 1
#        else
#          echo "ref_name=${{ github.ref_name }}"
#          echo "ref_name=${{ github.ref_name }}" >> $GITHUB_OUTPUT || exit 1
#        fi
#    - name: package airgap
#      run: make package-airgap && ls -la dist/artifacts
#      env:
#        VERSION: ${{ steps.get_ref_name.outputs.ref_name }}
#    - name: Build OS
#      run: make build-os
#      env:
#        FLAVOR: "leap"
#        VERSION: ${{ steps.get_ref_name.outputs.ref_name }}
#    - name: Build ISO
#      run: make build-iso-local
#      env:
#        VERSION: ${{ steps.get_ref_name.outputs.ref_name }}
